===============================
==>>> leggere anche il LEGGIMI-per-i-progetti-PSI-sulle-LINKED-LIST.txt in 
==>>> D:\ENRICO\DIDATTICA\INTERAZIONE-UOMO-CALCOLATORE\Progetti-SW
===============================

===>> QUESTO DOC È PER IL CORSO DI FONDAMENTI <<===

Questa cartella
  D:\ENRICO\DIDATTICA\INTERAZIONE-UOMO-CALCOLATORE\Progetti-SW\new_linked_list
contiene la versione del progetto per la gestione di liste di interi che uso durante la lezione e gli esami.

È Void Safe e deriva dalla versione linked_list che non è VoidSafe ma ha l'ACTIVE_ELEMENT.

Quindi ho copiato INT_LINKABLE dalla versione VS_linked_list e reimplemento in modalità VS le varie feature presenti in linked_list.

Aveva i commenti in inglese ma li sto mettendo in italiano perché li uso negli esercizi d'esame.

Bisogna iniziare ad introdurre la funzione di AutoTest di Eiffel che c'era già in linked_list. Si può fare indipendentemente dall'uso di questa versione per Fondamenti visto che i test sono una classe indipendente.

E' replicata nel repository GIT
  https://github.com/enriconardelli/Progetti-SW

===>> BISOGNA SOSTITUIRE LA SCANSIONE ESPLICITA CON FORTH <<===

ELENCO FEATURE (col + le ho convertite a VoidSafe con DAFARE non sono proprio scritte)

Access
 + first_element
 + last_element
 + active_element NB: questo può essere Void, diversamente da LINKED_LIST di Eiffel
 + count

Cursor movement
 + start
 + last
 + forth

Search
 + has
 + get_element
  first DAFARE ?? È SEMPLICEMENTE first_element.value
  last DAFARE ?? È SEMPLICEMENTE last_element.value
  item DAFARE ?? È SEMPLICEMENTE active_element.value

Status
 + value_follows
 + value_after
 + value_precedes
 + value_before
 + index_of
 + value_at

Insertion single free
 + append
 + prepend

Insertion single targeted
 + insert_after
 + insert_after_reusing (usa get_element e append)
 + insert_before
 + insert_before_reusing (usa has e prepend)
 + insert_before_with_2_cursors

Insertion multiple targeted
 + insert_multiple_after
 + insert_multiple_after_reusing (usa has e append)
 + insert_multiple_before DA RIVEDERE COME _after
 + insert_multiple_before_without_prepend DA RIVEDERE COME _after

Removal single free
 + remove_active
  remove_first DA CANCELLARE
  remove_last DA CANCELLARE
 + remove_earliest
 + remove_latest

Removal single targeted
 + remove_earliest_following
 + remove_latest_following
 + remove_earliest_preceding
 + remove_latest_preceding

Removal multiple free
  remove_all
  wipeout

Removal multiple targeted
 + remove_all_following
 + remove_all_preceding

FEATURE DI MODIFICA DI VALORE IN-PLACE

Other
 + invert
  transpose DAFARE (scambia a coppie)

Manipulation
 + head_list
  tail_list DA FARE

Computation
 + count_of
 + highest
  lowest DA FARE
 + sum_of_positive
 
Convenience
 + printout